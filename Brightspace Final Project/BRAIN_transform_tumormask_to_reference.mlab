// MDL v1 utf8
mevislabVersion = 3.2
network  {
  watchlist = ""
}
module View2D {
  internal  {
    frame = "417 213 80 56"
    moduleGroupName = ""
    windows  {
      window _default {
        geometry = "733 615 400 400"
        sizeHint = "400 400"
        wasOpen = yes
      }
    }
  }
  fields  {
    instanceName = View2D
    inventorInputOn = FALSE
    inventorOutputOn = FALSE
    view2DExtensionsOn = TRUE
    startSlice = 12
    numSlices = 1
    numXSlices = 1
    sliceStep = 1
    slab = 1
    blendMode = BLEND_REPLACE
    timePoint = 0
    maxTimePoint = 0
    filterMode = FILTER_LINEAR
    standardKeys = TRUE
    cineMode = CINE_Z
    cineDirection = CINE_PINGPONG
    cineRepeat = CINE_ONCE
    cineSpeed = 0.1
    cineAlwaysReset = TRUE
    snapToCenter = FALSE
    zoomMode = VIEW2D_AUTO_ZOOM
    unzoomOnImageChange = FALSE
    sliceZoom = 1
    sliceZoomSynced = 1
    baseColor = "1 1 1"
    margin = "2 2"
    sliceOrigin = "0 0"
    useShaders = TRUE
    useManagedInteraction = FALSE
    lutCenter = 958.754516601563
    lutWidth = 1400.19262695313
    annotationOn = TRUE
    annotationMode = ANNO_MODE_AUTO
    annotationSizeMode = ANNO_SHOW_DETAILED
    annotationCol = "0.899999976158142 0.899999976158142 0.899999976158142"
    annotationFontSize = ANNO_SIZE_AUTO
    annoCoords = Voxel
    annoCTValue = AsIs
    borderOn = TRUE
    borderColor = "0.899999976158142 0.899999976158142 0.899999976158142"
    valueHighPrecision = TRUE
    showColorChannelValues = FALSE
    colorChannelSeparator = " / "
    maxPrecision = 4
    enableSlicing = TRUE
    useRelativeLUTIfNoInputImage = TRUE
  }
}
module ImageLoad {
  internal  {
    frame = "241 533 192 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1043 574 474 353"
        sizeHint = "474 353"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = case_1_T1_post
    filename = C:/Users/mlopescunha/Downloads/visContestData_mlImage/case1/case1_T1_post.mlimage
    autoLoad = TRUE
    readRaw = FALSE
    rawX = 1
    rawY = 1
    rawZ = 1
    rawC = 1
    rawT = 1
    rawU = 1
    dataTypeRaw = "unsigned int8"
    planarConfig = Contiguous
    byteOrder = LittleEndian
    dataOffset = 0
    pageSizeHint = "0 0 0 0 0 0"
    suppressErrorLog = FALSE
    dicomIgnoreHalfVoxelShift = FALSE
    enableCheckSumTests = FALSE
  }
}
module ImageLoad {
  internal  {
    frame = "469 533 184 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1042 637 474 353"
        sizeHint = "474 353"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = case_1_T1_post_tumormask
    filename = C:/Users/mlopescunha/Downloads/visContestData_mlImage/case1/case1_T1_post_tumormask.mlimage
    autoLoad = TRUE
    readRaw = FALSE
    rawX = 1
    rawY = 1
    rawZ = 1
    rawC = 1
    rawT = 1
    rawU = 1
    dataTypeRaw = "unsigned int8"
    planarConfig = Contiguous
    byteOrder = LittleEndian
    dataOffset = 0
    pageSizeHint = "0 0 0 0 0 0"
    suppressErrorLog = FALSE
    dicomIgnoreHalfVoxelShift = FALSE
    enableCheckSumTests = FALSE
  }
}
module Mask {
  internal  {
    frame = "397 309 120 72"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1015 897 441 124"
        sizeHint = "353 124"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = Mask
    mode = MaskedOriginal
    outputImageSize = InvalidateOutputIfSizesDiffer
    blending = 0.5
    background = 0
  }
}
module BoundingBoxInReferenceSystem {
  internal  {
    frame = "321 429 240 56"
    moduleGroupName = ""
    showNetworkPanel = true
    windows  {
      window _default {
        geometry = "1080 589 400 323"
        sizeHint = "400 323"
        wasOpen = no
      }
    }
  }
  fields  {
    instanceName = BoundingBoxInReferenceSystem
    inBoundingBoxMode = VoxelVolume
    inOutputBoundingBoxMode = Round
    inZeroImageData = FALSE
    onInputChangeBehavior = Clear
  }
}
connections  {
  View2D.inImage = Mask.output0
  Mask.input0 = BoundingBoxInReferenceSystem.output0
  Mask.input1 = case_1_T1_post_tumormask.output0
  BoundingBoxInReferenceSystem.input0 = case_1_T1_post_tumormask.output0
  BoundingBoxInReferenceSystem.input1 = case_1_T1_post.output0
}
networkModel  {
  parentItems  {
    0  {
      MLABNetworkModelItem MLABNoteItem {
        uniqueId = 29
        objectName = ""
        parentUniqueId = 0
        frame = "612 237 490 199"
        backgroundColor  {
          r = 252
          g = 242
          b = 2
          a = 255
        }
        text = "Students encountered the problem that they do not know how to transform the supplied tumour mask to the world coordinates of the case_1_T1_post volume.

This can be achieved by using BoundingnBoxInReferenceSystem, where we use the case_1_T1_post volume as the reference and the tumour mask as the input. The module will output the subvolume with the tumour.

Afterwards, the students are free to further mask out the surrounding tissue. BoundingBoxInReferenceSystem only slices the correct sub-volume."
        richText = "*<html>
  <head>
    <style type="text/css">
      a.headerlink {
        visibility: hidden;
      }
      table {
        border-collapse: collapse;
      }
    </style>
  </head>
  <body>

  <p>Students encountered the problem that they do not know how to transform the supplied tumour mask to the world coordinates of the case_1_T1_post volume.</p>
<p>This can be achieved by using BoundingnBoxInReferenceSystem, where we use the case_1_T1_post volume as the reference and the tumour mask as the input. The module will output the subvolume with the tumour.</p>
<p>Afterwards, the students are free to further mask out the surrounding tissue. BoundingBoxInReferenceSystem only slices the correct sub-volume.</p>


  </body>
</html>*"
        titleText = "How to transform the tumour mask to the anatomical reference"
        isCollapsed = False
        drawAsComment = False
        titleFrame = "617 242 480 22"
      }
    }
  }
}
